{"version":3,"sources":["components/UI/Link/Link.js","components/UI/Nav/Nav.js","components/UI/Header/Header.js","components/UI/Footer/Footer.js","components/sections/VaccineSlot/spinner.js","util/search.js","HOC/Section.js","util/common.js","components/sections/VaccineSlot/index.js","components/sections/Sections.js","components/Layout/Layout.js","App.js","serviceWorker.js","index.js","assets/mp3/alert.mp3"],"names":["link","props","react_default","a","createElement","modules","className","classes","style","cursor","activeClass","to","target","spy","smooth","offset","duration","children","Nav","_useState","useState","_useState2","Object","slicedToArray","navClass","setNavClass","_useState3","_useState4","toggeledNav","settoggeledNav","useEffect","window","addEventListener","scrollY","concat","onClick","Link","pageType","console","log","header","UI_Nav_Nav","footer","href","SpinnerBlock","Spinner","color","fuzzySearch","options","fuse","Fuse","keys","threshold","value","length","search","section","id","TimeFormat","time","currentDate","Moment","format","HTML5_FMT","DATE","VaccineSlot","_React$useState","React","_React$useState2","states","setStates","_React$useState3","_React$useState4","districts","setDistricts","_React$useState5","_React$useState6","selectedState","setSelectedState","_React$useState7","_React$useState8","selectedDistrict","setSelectedDistrict","_React$useState9","_React$useState10","enableDistrict","setEnableDistrict","_React$useState11","_React$useState12","loader","setLoader","_React$useState13","_React$useState14","availableSlots","setAvailableSlots","modal","setModal","backdrop","_useState5","keyboard","_useState7","_useState8","selectedSlot","setSelectedSlot","_useState9","_useState10","visibleResults","setVisibleResults","_useState11","_useState12","enablePinCode","setEnablePinCode","_useState13","_useState14","selectedPinCode","setSelectedPinCode","toggle","_useState15","_useState16","searchDate","setSearchDate","_useState17","Date","_useState18","startDate","setStartDate","_useState19","_useState20","validationError","setValidationError","_useState21","_useState22","_useState23","_useState25","_useState26","enableAlert","setEnableAlert","_useState27","_useState28","alertFilter","setAlertFilter","_useState29","Audio","alertMp3","_useState30","audio","setAudio","_useState31","_useState32","selectedDistrictName","setSelectedDistrictName","_useState33","_useState34","_useState35","_useState36","localStorage","setItem","fetchDataByInterval","useCallback","searchBy","dId","url","axios","method","headers","content-type","then","response","data","centers","isAvailableCount","map","slot","sessions","session","available_capacity","play","catch","error","fetchSlotByPinCodeData","fetchSlotData","pinCode","state","district","fetchDistrictData","state_id","districtsList","e","i","push","district_id","label","district_name","name","fetchStateData","stateList","state_name","interval","setInterval","getItem","JSON","parse","clearInterval","handleSearch","validationCheck","validationBySearch","filterObj","stringify","getStateFilters","Fragment","SelectSearch","filterOptions","placeholder","onChange","handleAlertSettings","handleDistrictList","getDistrictFilters","obj","handleSetDistrict","handlePincode","event","handleSlotDetails","slotObj","handleAlertSwitch","_useState37","_useState38","getTotalAvailabilityDose","availableCapacity","key","getAvailableCenters","dist","width","textAlign","vaccinesArray","available_capacity_dose1","available_capacity_dose2","indexOf","vaccine","btnColor","address","pincode","join","fee_type","Badge","pill","from","getPinCodeSearchButton","Col","sm","mt","alignItems","justifyContent","maxHeight","spinner","ButtonToggle","getDatePicker","react_datepicker_min_default","onKeyDown","preventDefault","onKeyPress","showPreviousMonths","height","minDate","selected","date","dateVal","Section","Row","md","lg","display","react_switch_default","checked","xs","type","evt","padding","handleDiameter","borderRadius","uncheckedIcon","index_esm","checkedIcon","uncheckedHandleIcon","checkedHandleIcon","Alert","slotsAvailable","slots","Modal","isOpen","ModalHeader","ModalBody","min_age_limit","keyId","ModalFooter","Button","getModalData","sections","react","sections_VaccineSlot","Layout","Header","minHeight","Sections","Footer","App","components_Layout_Layout","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.e3823f19.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-scroll';\n\nconst link = props => {\n  return (\n    <Link\n      className={props.classes}\n      style={{ cursor: 'pointer' }}\n      activeClass='active'\n      to={props.target}\n      spy={true}\n      smooth={true}\n      offset={props.offset || -45}\n      duration={500}\n    >\n      {props.children}\n    </Link>\n  );\n};\n\nexport default link;\n","import React, { useState, useEffect } from 'react';\n\nimport Link from '../Link/Link';\n\nconst Nav = () => {\n  const [navClass, setNavClass] = useState('');\n  const [toggeledNav, settoggeledNav] = useState(false);\n\n  const toggleNav = () => {\n    settoggeledNav(!toggeledNav);\n  };\n\n  const handleMenu = (pageType) => {\n    console.log('page', pageType)\n\n  }\n\n  useEffect(() => {\n    window.addEventListener('scroll', () => {\n      let navClass = '';\n      if (window.scrollY >= 200) {\n        navClass = 'scrolled';\n      }\n      setNavClass(navClass);\n    });\n  }, []);\n  return (\n    <nav className={`navbar navbar-expand-md bg-light ${navClass}`}>\n      <div className='container'>\n        <div className='navbar-brand'>\n          <span>Vaccine Slot</span>\n          <i className='fas fa-circle ml-1' />\n        </div>\n        <div\n          className={`navbar-toggler nav-icon ${(() => {\n            if (toggeledNav) return 'open';\n            return '';\n          })()}`}\n          onClick={toggleNav}\n        >\n          <span />\n          <span />\n          <span />\n        </div>\n\n        <div\n          className={`collapse navbar-collapse ${(() => {\n            if (toggeledNav) return 'show';\n            return '';\n          })()}`}\n        >\n          <ul className='navbar-nav ml-auto'>\n            <li className='nav-item'>\n              <Link onClick={() => handleMenu('vaccine-slot')} target='/' offset={-120} classes='nav-link'>\n                Vaccination Center\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Nav;\n","import React from 'react';\n\nimport Nav from '../Nav/Nav';\n\nconst header = () => {\n  return (\n    <div className='header'>\n      <Nav />\n    </div>\n  );\n};\n\nexport default header;\n","import React from 'react';\n\nconst footer = () => {\n  return (\n    <footer className=''>\n      <div className='bottom-footer pt-3 pb-2 text-center'>\n      <small>This application using the Public API service provided by <a href=\"https://www.cowin.gov.in/home\" target=\"_blank\">cowin.gov.in</a>, the vaccine portal of the Union Ministry of Health.</small>\n        <p>©2021 All Right Reserved. Developed By Vipinkumar</p>\n      </div>\n    </footer>\n  );\n};\n\nexport default footer;\n","import React from 'react';\nimport { Spinner } from 'reactstrap';\n\nconst SpinnerBlock = (props) => {\n  return (\n    <div>\n      <Spinner color=\"primary\" />\n    </div>\n  );\n}\n\nexport default SpinnerBlock;","import Fuse from 'fuse.js';\n\nexport default function fuzzySearch(options) {\n    const fuse = new Fuse(options, {\n        keys: ['name', 'groupName', 'items.name'],\n        threshold: 0.3,\n    });\n\n    return (value) => {\n        if (!value.length) {\n            return options;\n        }\n\n        return fuse.search(value);\n    };\n}","import React from 'react';\n\nconst section = props => {\n  return <section id={props.id}>{props.children}</section>;\n};\n\nexport default section;\n","import Moment from 'moment';\nexport default function TimeFormat(time) {\n   const currentDate = Moment().format(Moment.HTML5_FMT.DATE); \n   return Moment(currentDate + ' '+time).format('LT');;\n}","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Table, Thead, Tbody, Tr, Th, Td } from \"react-super-responsive-table\";\nimport {\n  Row,\n  Col,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Tooltip,\n  ModalFooter,\n  Alert,\n  Badge,\n} from \"reactstrap\";\nimport \"react-dropdown-now/style.css\";\nimport { ButtonToggle } from \"reactstrap\";\nimport SpinnerBlock from \"./spinner\";\nimport Moment from \"moment\";\nimport SelectSearch from \"react-select-search\";\nimport \"react-select-search/style.css\";\nimport fuzzySearch from \"../../../util/search\";\nimport Section from \"../../../HOC/Section\";\nimport \"./index.scss\";\nimport 'react-super-responsive-table/dist/SuperResponsiveTableStyle.css'\nimport TimeFormat from '../../../util/common';\nimport Switch from \"react-switch\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"checkboxes/dist/css/checkboxes.min.css\";\nimport alertMp3 from '../../../assets/mp3/alert.mp3';\nimport { FcInfo, FcSpeaker, FcCancel, FcOk, FcFeedback } from \"react-icons/fc\";\nimport * as emailjs from 'emailjs-com'\nimport EmailTextBox from '../EmailBox/index';\n\nfunction VaccineSlot(props) {\n  let [states, setStates] = React.useState([]);\n  let [districts, setDistricts] = React.useState([]);\n  let [selectedState, setSelectedState] = React.useState('');\n  let [selectedDistrict, setSelectedDistrict] = React.useState('');\n  let [enableDistrict, setEnableDistrict] = React.useState(false);\n  let [loader, setLoader] = React.useState(false);\n  let [availableSlots, setAvailableSlots] = React.useState([]);\n  const [modal, setModal] = useState(false);\n  const [backdrop] = useState(true);\n  const [keyboard] = useState(true);\n  const [selectedSlot, setSelectedSlot] = useState([]);\n  const [visibleResults, setVisibleResults] = useState(false);\n  const [enablePinCode, setEnablePinCode] = useState(false);\n  const [selectedPinCode, setSelectedPinCode] = useState('');\n  const { className } = props;\n  const toggle = () => setModal(!modal);\n  const [searchDate, setSearchDate] = useState(Moment().format(\"DD/MM/YY\"));\n  const [startDate, setStartDate] = useState(new Date());\n  const [validationError, setValidationError] = useState('');\n  const [selectDate, setSelectDate] = useState(new Date());\n  const [checked] = useState(true);\n  const [enableAlert, setEnableAlert] = useState(false);\n  const [alertFilter, setAlertFilter] = useState({})\n  const alertInterval = 150000;\n  const [audio, setAudio] = useState(new Audio(alertMp3));\n  const [selectedDistrictName, setSelectedDistrictName] = useState('')\n  const [emailBox, setEmailBox] = useState(false);\n  const [notificationEmailId, setNotificationEmailId]= useState('');\n  React.useEffect(() => {\n    localStorage.setItem('enableAlert', false);\n    localStorage.setItem('alertFilter', '');\n    console.log(alertFilter);\n    setAudio(new Audio(alertMp3));\n  }, [alertFilter]);\n  // set interval alert data\n  const fetchDataByInterval = React.useCallback((searchBy, dId) => {\n    setLoader(true);\n    let url = \"https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/calendarByDistrict?district_id=\" + dId + \"&date=\" + searchDate;\n    if (searchBy && searchBy === 'pincode') {\n      url = \"https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/calendarByPin?pincode=\" + dId + \"&date=\" + searchDate;\n    }\n    axios({\n      method: \"GET\",\n      url: url,\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n    })\n      .then((response) => {\n        // if (response.data.centers)\n        if (response.data.centers && response.data.centers.length > 0) {\n          let isAvailableCount = 0;\n\n          response.data.centers.map((slot) => {\n            slot.sessions.map((session) => {\n              isAvailableCount += session.available_capacity;\n              return true;\n            });\n            return true;\n          });\n\n          if (isAvailableCount && isAvailableCount > 0) {\n            console.log('here alert ', isAvailableCount);\n            audio.play();\n          } else {\n            console.log('here no alert ', isAvailableCount);\n          }\n\n        }\n        setAvailableSlots(response.data.centers);\n        setLoader(false);\n        setVisibleResults(true);\n      })\n      .catch((error) => {\n        setLoader(false);\n        setVisibleResults(false);\n      });\n  },[searchDate]);\n\n\n  // Fetch data from API - https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/findByPin?pincode=110001&date=31-03-2021\n  const fetchSlotByPinCodeData = React.useCallback((dId) => {\n    setLoader(true);\n    axios({\n      method: \"GET\",\n      url:\n        \"https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/calendarByPin?pincode=\" + dId + \"&date=\" + searchDate,\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n    })\n      .then((response) => {\n        // if (response.data.centers)\n        setAvailableSlots(response.data.centers);\n        setLoader(false);\n        setVisibleResults(true);\n      })\n      .catch((error) => {\n        setLoader(false);\n        setVisibleResults(false);\n      });\n  }, [searchDate]);\n\n\n  const fetchSlotData = React.useCallback((dId) => {\n    setLoader(true);\n    axios({\n      method: \"GET\",\n      url:\n        \"https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/calendarByDistrict?district_id=\" +\n        dId +\n        \"&date=\" +\n        searchDate,\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n    })\n      .then((response) => {\n        // if (response.data.centers)\n        setAlertFilter({\n          pinCode: '',\n          state: selectedState,\n          district: selectedDistrict\n        })\n        setAvailableSlots(response.data.centers);\n        setLoader(false);\n        setVisibleResults(true);\n      })\n      .catch((error) => {\n        setLoader(false);\n        setVisibleResults(false);\n      });\n  }, [searchDate]);\n\n  const fetchDistrictData = React.useCallback((state_id) => {\n    setLoader(true);\n    axios({\n      method: \"GET\",\n      url:\n        \"https://cdn-api.co-vin.in/api/v2/admin/location/districts/\" + state_id,\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n    })\n      .then((response) => {\n        let districtsList = [];\n        if (response.data.districts) {\n          response.data.districts.map((e, i) =>\n            districtsList.push({\n              id: e.district_id,\n              value: e.district_id,\n              label: e.district_name,\n              name: e.district_name,\n            })\n          );\n        }\n        setEnableDistrict(true);\n        setDistricts(districtsList);\n        setLoader(false);\n      })\n      .catch((error) => {\n        setLoader(false);\n      });\n  }, []);\n\n  const fetchStateData = React.useCallback(() => {\n    setLoader(true);\n    axios({\n      method: \"GET\",\n      url: \"https://cdn-api.co-vin.in/api/v2/admin/location/states\",\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n    })\n      .then((response) => {\n        let stateList = [];\n        if (response.data.states) {\n          response.data.states.map((e, i) =>\n            stateList.push({\n              id: e.state_id,\n              value: e.state_id,\n              label: e.state_name,\n              name: e.state_name,\n            })\n          );\n        }\n        setStates(stateList);\n        setLoader(false);\n      })\n      .catch((error) => {\n        setLoader(false);\n      });\n  }, []);\n  React.useEffect(() => {\n    const interval = setInterval(() => {\n      const enableAlertCheck = localStorage.getItem('enableAlert');\n      if (enableAlertCheck === 'true') {\n        const alertFilter = JSON.parse(localStorage.getItem('alertFilter'));\n        if (alertFilter) {\n          if (alertFilter.pinCode) {\n            fetchDataByInterval('pincode', alertFilter.pinCode);\n          } else if (alertFilter.district) {\n            fetchDataByInterval('', alertFilter.district);\n          }\n        }\n      }\n    }, alertInterval);\n    return () => clearInterval(interval);\n  }, []);\n  React.useEffect(() => {\n    fetchStateData();\n  }, [fetchStateData]);\n\n  const handleDistrictList = (value) => {\n    setEnableDistrict(false);\n    fetchDistrictData(value);\n    setSelectedState(value);\n    setVisibleResults(false);\n    setValidationError('');\n    // validationBySearch();\n    console.log(selectedState);\n    handleAlertSettings();\n  };\n\n  const handleSetDistrict = (value, obj) => {\n    console.log('name', obj)\n    setSelectedDistrict(value);\n    setVisibleResults(false);\n    setValidationError('');\n    // validationBySearch();\n    handleAlertSettings();\n    setSelectedDistrictName(obj.name);\n  };\n\n  const validationBySearch = (searchBy) => {\n    let validationError = false;\n    setValidationError('');\n    if (searchBy && searchBy === 'pincode') {\n      console.log('jerere code', selectedPinCode.length)\n      if (selectedPinCode === '' || (selectedPinCode.length !== 6)) {\n        setValidationError('Please enter valid pincode');\n        validationError = true;\n      } else {\n        setValidationError('');\n      }\n    } else {\n      if (selectedState === '') {\n        validationError = true;\n        setValidationError('Please select state')\n      } else if (selectedDistrict === '') {\n        validationError = true;\n        setValidationError('Please select district')\n      }\n    }\n    return validationError;\n  }\n\n  const getEmailResults = () => {\n      return (\n        <div>\n          <Row>\n            Hi, \n          </Row>\n          <Row className=\"d-flex\">\n          <Col lg={4} md={4} sm={12} xs={12}>\n              <div className=\"mt-3 slot-title\"><span><h4>Slot & Sessions </h4></span></div>\n            </Col>\n          </Row>\n          <div className=\"widget-padding-md\">\n            <Row>\n              <Col lg={12} md={12} sm={12}>\n              \n                {availableSlots && availableSlots.length > 0 && (<Alert color=\"success\">\n                  <p>You searched for vaccine availability in <b>{selectedDistrictName} </b> district on <b>{searchDate}</b></p>\n                  <p>\n                  {false && <b><code>{getTotalAvailabilityCenter()}</code>{\" \"}</b>}\n  \n                    <b>\n                    {\" \"}<code>{getTotalAvailabilityDose()}</code>{\" \"}\n                  </b>{\" \"}vaccines are available on <b>{searchDate}</b>. For Registration & booking , Please visit <a href=\"https://selfregistration.cowin.gov.in/\" target=\"_blank\">www.cowin.gov.in</a>\n                </p></Alert>)}\n                \n                \n              </Col>\n              <Col md={12} lg={12}>\n              {availableSlots && availableSlots.length > 0\n                  ? getAvailableCenters()\n                  : <Alert color=\"warning\"><p>You searched for vaccine availability in {selectedDistrictName && <><b>{selectedDistrictName} </b> district on</>} {selectedPinCode && <><b>{selectedPinCode}</b> pincode on</>} <b>{searchDate}</b></p>\n                  No Vaccination center is available for booking.</Alert>}\n              </Col>\n            </Row>\n            <Row>\n            \n            </Row>\n          </div>\n        </div>)\n  \n    }\n\n  const handleEmailSend = () => {\n    const name = 'vkp';\n    const messageHtml = getEmailResults();\n    console.log(messageHtml);\n    console.log('here reached')\n    let templateParams = {\n      from_name: name,\n      to_name: 'developers.vkp@gmail.com',\n      subject: 'Notification of vaccine availability',\n      message_html: messageHtml,\n     }\n     emailjs.send(\n      'service_559i84n',\n      'template_ixwpq7r',\n       templateParams,\n      'user_3X8BzPMR11z3eu3VpQDRJ'\n     )\n  }\n\n  const handleSearch = (searchBy) => {\n    const validationCheck = validationBySearch(searchBy);\n    console.log(\"select date pick\", Moment(startDate).format(\"DD/MM/YY\"));\n    setSearchDate(Moment(startDate).format(\"DD/MM/YY\"));\n    if (!validationCheck) {\n      if (searchBy && searchBy === 'pincode') {\n        console.log('Search by pin', selectedPinCode);\n        setAlertFilter({\n          'pinCode': selectedPinCode,\n          'state': \"\",\n          \"district\": \"\"\n        });\n        const filterObj = {\n          pinCode: selectedPinCode,\n          district: \"\"\n        };\n        localStorage.setItem('alertFilter', JSON.stringify(filterObj));\n\n        fetchSlotByPinCodeData(selectedPinCode);\n\n      } else {\n        const filterObj = {\n          pinCode: '',\n          district: selectedDistrict\n        };\n        localStorage.setItem('alertFilter', JSON.stringify(filterObj));\n        fetchSlotData(selectedDistrict);\n        // handleEmailSend();\n\n      }\n    }\n    // if (selectedState === 0) {\n    //   setStateValidation('Please select state')\n    // } else if (selectedDistrict === 0) {\n    //   setStateValidation('');\n    //   setDistrictValidation('Please select district')\n    // } else {\n\n    // }\n\n  };\n  const getStateFilters = () => {\n    return (<>\n      <SelectSearch\n        options={states}\n        search\n        filterOptions={fuzzySearch}\n        placeholder=\"Select your state\"\n        onChange={(value) => handleDistrictList(value)}\n      />\n    </>\n    );\n  };\n\n  const getDistrictFilters = () => {\n    return (\n      <><SelectSearch\n        options={districts}\n        search\n        filterOptions={fuzzySearch}\n        placeholder=\"Select your district\"\n        onChange={(value, obj) => handleSetDistrict(value, obj)}\n      />\n      </>\n    );\n  };\n\n  const getPinCodeTextField = () => {\n    return (\n      <><Col className=\"form-group\" md={4} lg={4}>\n        <label >Pincode</label>\n        <input type=\"number\" className=\"form-control\" id=\"pincode\" placeholder=\"Enter pincode\" onChange={(evt) => handlePincode(evt)} />\n        {/* <small id=\"emailHelp\" class=\"form-text text-muted\">We'll never share your email with anyone else.</small> */}\n      </Col>\n        {<Col md={4} lg={4} className=\"form-group date_picker_block\">\n          <label >Date</label>\n          {getDatePicker()}\n        </Col>}\n        {getPinCodeSearchButton()}\n      </>\n    )\n  }\n\n  const handlePincode = (event) => {\n    setSelectedPinCode(event.target.value);\n    setSelectedDistrict('');\n    setSelectedDistrictName('')\n    setSearchDate(Moment().format(\"DD/MM/YY\"));\n    setStartDate(new Date())\n    // validationBySearch('pincode');\n  }\n\n  const handleSlotDetails = (slotObj) => {\n    setSelectedSlot(slotObj);\n    toggle();\n  };\n\n  const handleSwitchChange = () => {\n    setVisibleResults(false);\n    setEnableDistrict(false);\n    setEnablePinCode(!enablePinCode);\n    setSelectedDistrict('');\n    setSelectedDistrictName('');\n    setSelectedState('');\n    setValidationError('')\n    handleAlertSettings();\n    setSearchDate(Moment().format(\"DD/MM/YY\"));\n    setStartDate(new Date())\n  }\n\n  const handleAlertSettings = () => {\n    localStorage.setItem('enableAlert', false);\n    localStorage.setItem('alertFilter', '');\n    setEnableAlert(false)\n  }\n\n  const getPinCodeToggle = () => {\n    return (\n      <label>\n        <span>Search By PIN </span>\n        <Switch onChange={() => handleSwitchChange()} checked={enablePinCode} />\n      </label>\n    );\n  }\n\n  const handleAlertSwitch = () => {\n    setEnableAlert(!enableAlert);\n    localStorage.setItem('enableAlert', !enableAlert);\n  }\n\n  const handleDatePicker = (dateVal) => {\n    if (dateVal) {\n      setSearchDate(Moment(dateVal).format(\"DD/MM/YY\"));\n    } else {\n      setSearchDate(Moment().format(\"DD/MM/YY\"));\n    }\n    setStartDate(dateVal);\n  }\n  const [tooltipOpen, setToolTipOpen] = useState(false);\n\n  const toggleToolTip = () => {\n    setToolTipOpen(!tooltipOpen);\n  }\n\n\n  const getAlertToggle = () => {\n    return (\n      <label className=\"custom_toggle\">\n        <span>Enable alert </span>{\"  \"}<FcInfo onMouseEnter={() => { toggleToolTip () }} />\n      <Tooltip placement=\"left\" isOpen={tooltipOpen} toggle={toggleToolTip} target=\"TooltipExample\">\n        Set alert for vaccine availablity\n      </Tooltip>\n        <Switch onChange={() => handleAlertSwitch()} checked={enableAlert} />\n      </label>\n    );\n  }\n\n  const handleEmailModal = () => {\n    console.log('kkkk');\n    setEmailBox(!emailBox);\n  }\n\n  const getEmailNotification = () => {\n    return (\n      <ButtonToggle\n              outline \n              color=\"success\"\n              onClick={() => {\n                handleEmailModal('email');\n              }}\n            >\n              Get Notification <FcFeedback />\n            </ButtonToggle>\n    )\n  }\n\n  const getAlertSwitch = () => {\n\n    return (\n        <ButtonToggle\n        // outline\n\n                color=\"warning\"\n              >\n                Enable alert <Switch\n    checked={enableAlert}\n    onChange={() => handleAlertSwitch()}\n    handleDiameter={24}\n    // offColor=\"#08f\"\n    // onColor=\"#0ff\"\n    // offHandleColor=\"#0ff\"\n    // onHandleColor=\"#08f\"\n    height={25}\n    width={54}\n    borderRadius={16}\n    // activeBoxShadow=\"0px 0px 1px 2px #fffc35\"\n    uncheckedIcon={<FcSpeaker />}\n    checkedIcon={<FcOk/>}\n    uncheckedHandleIcon={<FcCancel />}\n    checkedHandleIcon={<FcSpeaker />}\n    className=\"react-switch\"\n    id=\"small-radius-switch\"\n  />\n              </ButtonToggle>\n      )\n  }\n\n  const getTotalAvailabilityDose = () => {\n    let availableCapacity = 0;\n    availableSlots.map((slot, key) => {\n      slot.sessions.map((session) => {\n        availableCapacity += session.available_capacity;\n        return true;\n      });\n    });\n    return availableCapacity;\n  }\n\n  const getTotalAvailabilityCenter = () => {\n    let availableCapacity = 0;\n    availableSlots.map((slot, key) => {\n      slot.sessions.map((session) => {\n        if (session.available_capacity > 0) {\n          availableCapacity += 1;\n          return true;\n        }\n      });\n    });\n    return availableCapacity;\n  }\n\n\n  const getAvailableCenters = () => {\n\n    return (\n      <Table>\n        <Thead>\n          <Tr>\n            <Th>#</Th>\n            <Th style={{ width: '25%'}}>Center</Th>\n            <Th style={{ width: '10%'}}>Vaccine</Th>\n            <Th style={{ width: '5%'}}>Fee</Th>\n            <Th style={{ width: '10%', textAlign : 'center'}}>Availability</Th>\n            <Th>Dose 1</Th>\n            <Th>Dose 2</Th>\n            <Th>Time</Th>\n            <Th>Details</Th>\n          </Tr>\n        </Thead>\n        <Tbody>\n          {availableSlots.map((slot, key) => {\n            let availableCapacity = 0;\n            let vaccinesArray = [];\n            let available_capacity_dose1 = 0;\n            let available_capacity_dose2 = 0;\n            slot.sessions.map((session) => {\n              availableCapacity += session.available_capacity;\n              if (vaccinesArray.indexOf(session.vaccine) == -1) {\n                vaccinesArray.push(session.vaccine);\n              }\n              available_capacity_dose1 += session.available_capacity_dose1;\n              available_capacity_dose2 += session.available_capacity_dose2;\n              return true;\n            });\n            let btnColor = 'success';\n            if (availableCapacity <= 10 && availableCapacity > 0) {\n              btnColor = 'danger';\n            } else if (availableCapacity > 10 && availableCapacity <= 75) {\n              btnColor = 'warning';\n            } else if (availableCapacity === 0) {\n              btnColor = 'dark'\n            }\n            return (\n              <Tr key={\"slot-\" + key} className={availableCapacity > 0 ? 'available' : ''}>\n                <Td className=\"pt-2\">{key + 1}</Td>\n                <Td className=\"pt-2\"><b>{slot.name}</b>\n                <br/>{slot.address}<br/>\n                {slot.district_name} - {slot.pincode}\n                  {/* <br/>{slot.address.length > 35 ? slot.address.substring(0, 35) + \"...\" : slot.address} */}\n                </Td>\n                <Td>\n                  {vaccinesArray.join(\",\")}\n                </Td>\n                <Td className=\"pt-2\">{slot.fee_type}</Td>\n                <Td style={{ width: '10%', textAlign : 'center'}}>\n\n                  <Badge pill color={btnColor} onClick={() => handleSlotDetails(slot)}>\n                    {availableCapacity}\n                  </Badge>\n                </Td>\n                <Td>\n                  {available_capacity_dose1}\n                </Td>\n                <Td>\n                  {available_capacity_dose2}\n                </Td>\n                <Td className=\"pt-2\">\n                  {TimeFormat(slot.from)} - {TimeFormat(slot.to)}\n                </Td>\n                <Td className=\"pt-2\" style={{ cursor: 'pointer' }}>\n                  <Badge color=\"info\" onClick={() => handleSlotDetails(slot)}>\n                    Details\n                  </Badge>\n                </Td>\n              </Tr>\n            );\n          })}\n        </Tbody>\n      </Table>\n    );\n  };\n  const getPinCodeSearchButton = () => {\n    return (\n      <Col\n        sm={3}\n        className=\"mt-2\"\n        mt={1}\n        style={{ alignItems: \"center\", justifyContent: \"center\" }}\n      >\n        <label style={{ maxHeight: '16px', color: 'red' }}>{validationError}</label>\n        <div className=\"rdn\">\n          {loader ? (\n            <SpinnerBlock />\n          ) : (\n            <ButtonToggle\n              color=\"primary\"\n              onClick={() => {\n                handleSearch('pincode');\n              }}\n            >\n              Search\n            </ButtonToggle>\n          )}\n        </div>\n      </Col>\n    )\n  };\n\n  const getSearchButton = () => {\n    return (\n      <Col\n        sm={2}\n        className=\"mt-2\"\n        mt={2}\n        style={{ alignItems: \"flex-end\", justifyContent: \"center\" }}\n      >\n        <label style={{ height: '16px', color: 'red' }}>{validationError}</label>\n        <div className=\"rdn\">\n          {loader ? (\n            <SpinnerBlock />\n          ) : (\n            <ButtonToggle\n              color=\"primary\"\n              onClick={() => {\n                handleSearch();\n              }}\n            >\n              Search\n            </ButtonToggle>\n          )}\n        </div>\n      </Col>\n    )\n  };\n\n  const getDatePicker = () => {\n    return (\n      <DatePicker onKeyDown={(e)=> {e.preventDefault();}} onKeyPress={(e)=> {e.preventDefault();}} showPreviousMonths={false} style={{ height: \"inherit\" }} minDate={new Date()} selected={startDate} onChange={date => handleDatePicker(date)} />\n    );\n  }\n\n  const getResults = () => {\n    return (\n      visibleResults &&\n      <div>\n        \n        <h6></h6>\n        <Row className=\"d-flex\">\n        <Col lg={4} md={4} sm={12} xs={12}>\n            <div className=\"mt-3 slot-title\"><span><h4>Slot & Sessions </h4></span></div>\n          </Col>\n          </Row>\n          <Row>\n          <Col lg={12} md={12} sm={12} xs={12} style={{display: 'flex', padding: '10px', justifyContent: 'center'}}>\n            {/* <Col lg={6} md={6} xs={6} className=\"d-flex\" style={{justifyContent : 'flex-start', margin: '4px', padding: '0px'}}>\n              {getEmailNotification()}\n            </Col> */}\n            {getAlertSwitch()}\n          </Col>\n        </Row>\n        <div className=\"widget-padding-md\">\n          <Row>\n            <Col lg={12} md={12} sm={12}>\n            \n              {availableSlots && availableSlots.length > 0 && (<Alert color=\"success\">\n                <p>You searched for vaccine availability in <b>{selectedDistrictName} </b> district on <b>{searchDate}</b></p>\n                <p>\n                {false && <b><code>{getTotalAvailabilityCenter()}</code>{\" \"}</b>}\n\n                  <b>\n                  {\" \"}<code>{getTotalAvailabilityDose()}</code>{\" \"}\n                </b>{\" \"}vaccines are available on <b>{searchDate}</b>. For Registration & booking , Please visit <a href=\"https://selfregistration.cowin.gov.in/\" target=\"_blank\">www.cowin.gov.in</a>\n              </p></Alert>)}\n              \n              \n            </Col>\n            <Col md={12} lg={12}>\n            {availableSlots && availableSlots.length > 0\n                ? getAvailableCenters()\n                : <Alert color=\"warning\"><p>You searched for vaccine availability in {selectedDistrictName && <><b>{selectedDistrictName} </b> district on</>} {selectedPinCode && <><b>{selectedPinCode}</b> pincode on</>} <b>{searchDate}</b></p>\n                No Vaccination center is available for booking.</Alert>}\n            </Col>\n          </Row>\n          <Row>\n          \n          </Row>\n        </div>\n      </div>)\n\n  }\n\n  const calenderComponent = () => {\n    return (\n      <DatePicker\n        onChange={setSelectDate}\n        value={selectDate}\n      />\n    )\n  }\n\n  const checkBoxComponent = () => {\n    return (\n      <input type=\"checkbox\" class=\"checkbox\" style={{ size: '20px', radius: '8px', bg: '#000000', color: '#F47A37', time: '0.4s' }} {...checked} />\n    )\n  }\n\n\n\n  const slotFinder = () => {\n    return (<><Col sm={4} className=\"mt-3\" mt={2}>\n      <h6>State</h6>\n      {getStateFilters()}\n    </Col>\n      {enableDistrict && <Col sm={3} className=\"mt-3\" mt={2}>\n        <h6>District</h6>\n        {getDistrictFilters()}\n      </Col>\n      }\n      {enableDistrict && <Col md={3} lg={3} className=\"form-group date_picker_block mt-2\">\n        <label >Date</label>\n        {getDatePicker()}\n      </Col>}\n      {getSearchButton()}\n\n    </>\n\n    )\n  };\n\n  const handleEmailId = (emailId) => {\n    console.log('here triggered', emailId)\n    setNotificationEmailId(emailId);\n  }\n\n  const getEmailBoxModal = () => {\n    return (\n      <Modal\n        isOpen={emailBox}\n        toggle={handleEmailModal}\n        className={className}\n        backdrop={backdrop}\n        keyboard={keyboard}\n      >\n        <ModalHeader toggle={handleEmailModal}>\n          Get the notification of vaccine availability through email\n        </ModalHeader>\n        <ModalBody>\n          <EmailTextBox handleEmailSend={() => handleEmailSend()} handleEmailId={() => handleEmailId()}/>\n        </ModalBody>\n        </Modal>\n    )\n  };\n\n  const getModalData = () => {\n    let slotsAvailable = 0;\n    selectedSlot.sessions.map((session) => {\n      slotsAvailable += session.slots.length;\n      return true;\n    });\n    return (\n      <Modal\n        isOpen={modal}\n        toggle={toggle}\n        className={className}\n        backdrop={backdrop}\n        keyboard={keyboard}\n      >\n        <ModalHeader toggle={toggle}><span><b>{selectedSlot && selectedSlot.name}</b> - {selectedSlot && selectedSlot.address}(#<b>{slotsAvailable}</b>) slots</span>\n        </ModalHeader>\n        <ModalBody>\n          <Table>\n            <Thead>\n              <Tr>\n                <Th style={{ width: '12%' }}>Date</Th>\n                <Th style={{ width: '12%' }}>Vaccine</Th>\n                <Th style={{ width: '14%' }}>From Age</Th>\n                <Th style={{ width: '15%' }}>Availability</Th>\n                <Th>Slots</Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {selectedSlot.sessions.map((session, key) => {\n                let btnColor = 'success';\n                const availableCapacity = session.available_capacity\n                if (availableCapacity < 10 && availableCapacity > 0) {\n                  btnColor = 'danger';\n                } else if (availableCapacity > 10 && availableCapacity < 75) {\n                  btnColor = 'warning';\n                } else if (availableCapacity === 0) {\n                  btnColor = 'dark'\n                }\n                return (\n                  <Tr key={\"slots-block-\" + key}>\n                    <Td className=\"pt-2\">{session.date}</Td>\n                    <Td className=\"pt-2\"><Badge href=\"#\" color=\"info\">{session.vaccine}</Badge></Td>\n                    <Td className=\"pt-2\">{session.min_age_limit}+</Td>\n                    <Td>\n                      <Badge pill color={btnColor}>\n                        {availableCapacity}\n                      </Badge>\n                    </Td>\n                    <Td className=\"pt-2\">\n                      {session.slots.map((slot, keyId) => {\n                        return (<span key={\"slot-time\" + keyId}><Badge pill href=\"#\" color=\"success\">{slot}</Badge> {\" \"}</span>)\n                      })}\n                    </Td>\n\n                  </Tr>\n                );\n              })}\n            </Tbody>\n          </Table>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={toggle}>\n            Cancel\n          </Button>\n        </ModalFooter>\n      </Modal>\n    );\n  };\n\n  const getCheckBox = () => {\n    return (\n      visibleResults && <Row className=\"mt-4\">\n        <Col md={2} lg={2} style={{ display: 'flex', alignItems: 'center' }}>\n          {checkBoxComponent()}{\" \"} Free\n                      </Col>\n        <Col md={2} lg={2} style={{ display: 'flex', alignItems: 'center' }}>\n          {checkBoxComponent()}{\" \"}  Paid\n                      </Col>\n        <Col md={2} lg={2} style={{ display: 'flex', alignItems: 'center' }}>\n          {checkBoxComponent()}{\" \"}  Covaxin\n                      </Col>\n        <Col md={2} lg={2} style={{ display: 'flex', alignItems: 'center' }}>\n          {checkBoxComponent()}{\" \"}  Covishield\n                      </Col>\n        <Col md={2} lg={2} style={{ display: 'flex', alignItems: 'center' }}>\n          {checkBoxComponent()}{\" \"}  18+\n                      </Col>\n        <Col md={2} lg={2} style={{ display: 'flex', alignItems: 'center' }}>\n          {checkBoxComponent()}{\" \"}  45+\n                      </Col>\n      </Row>\n    )\n  }\n\n  \n\n  return (\n    <Section id=\"contact\">\n      <div className=\"container pt-2 pb-5\">\n        <div className=\"section-header pt-5 pb-5 text-center\"></div>\n        <div className=\"section-content\">\n          <div className=\"row\">\n            <div className=\"col-md-12 col-lg-12 mr-auto ml-auto\">\n              <Row>\n                <Col md={12} lg={12} style={{ display: 'flex' }}>\n                  <h4 className=\"page-title\">\n                    Vaccine Slot -{\" \"}\n                    <span className=\"fw-semi-bold\">Availability</span>\n                  </h4>\n                </Col>\n              </Row>\n              <Row>\n                <Col md={12} lg={12} style={{ display: 'flex' }} className=\"mt-2\">\n                  <Col md={6} lg={6} className=\"alert_toggle p-0\">\n                    {/* {getAlertToggle()} */}\n                  </Col>\n\n                  <Col md={6} lg={6} className=\"pincode_toggle p-0\">\n                    {getPinCodeToggle()}\n                  </Col>\n                </Col>\n              </Row>\n\n              <Row>\n                <Col xs={12} lg={12}>\n                  <div className=\"widget-padding-md\">\n                    <Row>\n                      {enablePinCode ? getPinCodeTextField() : slotFinder()}\n                      { }\n                    </Row>\n\n                    {/* {getCheckBox()} */}\n                    {getResults()}\n                  </div>\n                </Col>\n              </Row>\n            </div>\n          </div>\n        </div>\n        {modal && getModalData()}\n        {/* {emailBox && getEmailBoxModal()} */}\n      </div>\n    </Section>\n  );\n}\n\nexport default VaccineSlot;\n","import React, { Fragment } from 'react';\nimport VaccineSlot from './VaccineSlot/index';\n\nconst sections = () => {\n  return (\n    <Fragment>\n      <VaccineSlot />\n    </Fragment>\n  );\n};\n\nexport default sections;\n","import React, { Fragment } from 'react';\n\nimport Header from '../UI/Header/Header';\nimport Footer from '../UI/Footer/Footer';\nimport Sections from '../sections/Sections';\n\nconst Layout = () => {\n  return (\n    <Fragment>\n      <Header />\n      <main style={{minHeight: '88vh'}}>\n        <Sections />\n      </main>\n      <Footer />\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import React from 'react';\n\nimport Layout from './components/Layout/Layout';\n\nfunction App() {\n  return <Layout />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './scss/main.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/alert.0bd3827c.mp3\";"],"sourceRoot":""}